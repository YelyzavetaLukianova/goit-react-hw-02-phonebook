{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","services/LocalStorage.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addNewContact","id","nanoid","reset","onSubmit","this","className","htmlFor","label","type","pattern","title","required","onChange","Component","Filter","filter","ContactListItem","contact","onClick","handleDelete","ContactList","filterContacts","map","Phonebook","contacts","newContact","some","alert","prevState","idToDelete","getFilterContacts","toLowerCase","includes","prevProps","key","localStorage","setItem","JSON","stringify","error","storage","cities","length","React","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2406ced.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport PropTypes from 'prop-types'\r\nimport './ContactForm.css'\r\n\r\nexport class ContactForm extends Component {\r\n    state={\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n     handleChange = e => {    \r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();    \r\n    this.props.addNewContact({ name:this.state.name,number:this.state.number,id:nanoid(10) });\r\n    this.reset();\r\n  }; \r\n\r\n  reset = () => this.setState({ name:'',number:'' });\r\n   \r\n    render() {\r\n        return (\r\n           <form onSubmit={this.handleSubmit} className=\"ContactForm\">\r\n          <div className=\"ContactForm__div\">\r\n            <label className=\"ContactForm__form__label\" htmlFor=\"text\">Contact </label>\r\n            <input\r\n            className=\"ContactForm__form__input\"\r\n              label=\"last\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id='text'\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"ContactForm__div\">\r\n            <label className=\"ContactForm__form__label\" htmlFor=\"tel\">Phone Number </label>\r\n            <input\r\n            className=\"ContactForm__form__input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id=\"tel\"\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />            \r\n          </div>\r\n          <button className=\"ContactForm__form__btn\" type=\"submit\">\r\n          Add contact\r\n        </button></form>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n ContactForm.propTypes = {\r\n\r\n    }\r\n\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Filter(props) {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"filter\">Filter </label>\r\n            <input              \r\n              type=\"text\"\r\n              name=\"filter\"\r\n              id=\"filter\"\r\n              value={props.filter}             \r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n\r\n}\r\n\r\nexport default Filter\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './ContactListItem.css'\r\n\r\nfunction ContactListItem(props) {\r\n    return (\r\n        <li className=\"ContactListItem\">\r\n            <p className=\"ContactListItem__Name\">Name: {props.contact.name}</p>\r\n            <p className=\"ContactListItem__Name\">Number: {props.contact.number}</p> \r\n            <button className=\"ContactListItem__btn\" type=\"button\" onClick={()=>props.handleDelete(props.contact.id)} >\r\n          Delete contact\r\n        </button>           \r\n            </li>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n\r\n}\r\n\r\nexport default ContactListItem\r\n\r\n","import PropTypes from 'prop-types'\r\nimport ContactListItem from './ContactListItem/ContactListItem'\r\nimport './ContactList.css'\r\n\r\nfunction ContactList({filterContacts,handleDelete}) {\r\n\r\n    return (\r\n         <ul className=\"ContactList\">         \r\n          {filterContacts.map(contact => (\r\n              <ContactListItem contact={contact} key={contact.id}  handleDelete={handleDelete}/>        \r\n           \r\n          ))}\r\n        </ul>   \r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    filterContacts:PropTypes.array.isRequired,\r\n    handleDelete:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList\r\n\r\n","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm'\r\nimport Filter from '../Filter/Filter'\r\nimport ContactList from '../ContactList/ContactList'\r\nimport * as storage from '../../services/LocalStorage'\r\n\r\n\r\n\r\nclass Phonebook extends React.Component {\r\n  state = {\r\n    contacts: [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n  ],\r\n    filter: '',    \r\n };\r\n  \r\ncomponentDidUpdate(prevProps, prevState){\r\n    if (prevState.contacts !== this.state.contacts) {\r\n        storage.save('contacts', this.state.cities);\r\n    }\r\n}  \r\n\r\n  addNewContact = newContact => {\r\n    const isDuplicate = this.state.contacts.some(contact=>contact.name===newContact.name)\r\n    if (isDuplicate) \r\n     { return alert (`${newContact.name} is already in contacts`)}\r\n    this.setState(prevState => ({      \r\n      contacts: [...prevState.contacts, newContact],\r\n    }));\r\n  };\r\n\r\n  handleChange = e => {    \r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleDelete = (idToDelete) => {\r\n    this.setState(prevState => ({      \r\n      contacts: prevState.contacts.filter(contact=>contact.id!==idToDelete),\r\n    }));\r\n  }; \r\n\r\n  getFilterContacts=()=>{\r\n    return this.state.contacts.filter(contact=>contact.name.toLowerCase().includes(this.state.filter.toLowerCase()))\r\n  }\r\n\r\n  render() {\r\n    const filterContacts=this.getFilterContacts();\r\n    return (\r\n      <div>\r\n        <div>\r\n        <h1>Phonebook</h1>\r\n         <ContactForm addNewContact={this.addNewContact}/>\r\n         <h2>Contacts</h2>\r\n         <Filter filter={this.state.filter} handleChange={this.handleChange}/>         \r\n        </div>\r\n       {filterContacts.length > 0 && <ContactList filterContacts={filterContacts} handleDelete={this.handleDelete} /> }     \r\n       \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import { Component } from 'react';\nimport './App.css';\nimport Phonebook from './components/Phonebook/Phonebook';\n// import Statistics from './components/Statistics';\n// import FriendList from './components/FriendList';\n// import TransactionHistory from './components/TransactionHistory';\n// import data from './data/data';\n// import transactions from './data/transactions';\n\nfunction App() {\n\n  return (    \n      <Phonebook />   \n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}